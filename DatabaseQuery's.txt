All details about database and database queries and structure 

---------------------------------------------------------------------

Here are the command before Sonali Ma'am approved the database(For backup)

----> https://dbdiagram.io/d/ValetParkingSystem-Database-Design-67053cc1fb079c7ebdbf8835


Commands :

Table Users {
  UGUID varchar [unique]
  UserID integer [primary key]
  Name varchar
  PhoneNumber varchar
  Email varchar
  Password varchar
  CreatedBy varchar
  CarGUID varchar
  CreatedAt timestamp
  UpdatedBy varchar
  UpdatedAt timestamp
}

Table Cars {
  CarGUID varchar [primary key]
  CarNumber varchar
  UserID integer
  CarModel varchar
  ValetID integer
  CarStatus varchar
  CreatedBy varchar
  CreatedAt timestamp
  UpdatedBy varchar
  UpdatedAt timestamp
}

Table Valets {
  VGUID varchar [unique]
  ValetID integer [primary key]
  ValetName varchar
  PhoneNumber varchar
  Email varchar
  Password varchar
  CreatedBy varchar
  CreatedAt timestamp
  UpdatedBy varchar
  UpdatedAt timestamp
  CarGUID varchar
}

Ref: Cars.UserID > Users.UserID
Ref: Cars.ValetID > Valets.ValetID
Ref: Users.CarGUID > Cars.CarGUID
Ref: Valets.CarGUID > Cars.CarGUID

---------------------------------------------------------------------





-- CarStatus Table
CREATE TABLE CarStatus (
    ID VARCHAR(50) PRIMARY KEY,
    Status VARCHAR(50) CHECK (Status IN ('parked', 'unparked', 'in-transit'))
);

-- Cars Table
CREATE TABLE Cars (
    ID VARCHAR(50) PRIMARY KEY,
    CarNumber VARCHAR(20) UNIQUE,
    CarModel VARCHAR(50),
    StatusID VARCHAR(50),
    CreatedBy VARCHAR(50),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedBy VARCHAR(50),
    UpdatedAt DATETIME DEFAULT GETDATE(),
    OwnerID INT,
    ValetID INT,
    FOREIGN KEY (StatusID) REFERENCES CarStatus(ID)
);

-- Users Table
CREATE TABLE Users (
    ID INT PRIMARY KEY,
    CYGID VARCHAR(50) UNIQUE,
    Name VARCHAR(100),
    PhoneNumber VARCHAR(15) UNIQUE,
    Email VARCHAR(100) UNIQUE,
    Password VARCHAR(255),
    Role BIT,
    CreatedBy VARCHAR(50),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedBy VARCHAR(50),
    UpdatedAt DATETIME DEFAULT GETDATE(),
    CarID VARCHAR(50),
    FOREIGN KEY (CarID) REFERENCES Cars(ID)
);

-- CarStatusLog Table
CREATE TABLE CarStatusLog (
    ID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT,
    CarID VARCHAR(50),
    StatusID VARCHAR(50),
    CreatedAt DATETIME DEFAULT GETDATE(),
    UpdatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(ID),
    FOREIGN KEY (CarID) REFERENCES Cars(ID),
    FOREIGN KEY (StatusID) REFERENCES CarStatus(ID)
);



-- Insert into CarStatus
INSERT INTO CarStatus (ID, Status) VALUES
('STATUS001', 'parked'),
('STATUS002', 'unparked'),
('STATUS003', 'in-transit');

-- Insert into Cars
INSERT INTO Cars (ID, CarNumber, CarModel, StatusID, CreatedBy, OwnerID, ValetID) VALUES
('CAR001', 'ABC123', 'Toyota Camry', 'STATUS001', 'admin', 1, NULL),
('CAR002', 'XYZ456', 'Honda Accord', 'STATUS002', 'admin', 2, NULL),
('CAR003', 'LMN789', 'Ford Focus', 'STATUS003', 'admin', 3, NULL),
('CAR004', 'JKL012', 'Nissan Altima', 'STATUS001', 'admin', 4, NULL),
('CAR005', 'QRS345', 'Chevrolet Malibu', 'STATUS002', 'admin', 5, NULL);

-- Insert into Users
INSERT INTO Users (ID, CYGID, Name, PhoneNumber, Email, Password, Role, CreatedBy) VALUES
(1, 'C1YID001', 'Alice Johnson', '+12345678901', 'alice.j@example.com', 'P@ssw0rd123', 1, 'admin'),
(2, 'C1YID002', 'Bob Smith', '+19876543210', 'bob.smith@xyz.com', 'MySecureP@ss', 0, 'admin'),
(3, 'C1YID003', 'Charlie Brown', '+10123456789', 'charlie.b@abc.com', '12345678', 1, 'admin'),
(4, 'C1YID004', 'David Wilson', '+11223344556', 'david.wilson@gmail.com', 'Password!2023', 0, 'admin'),
(5, 'C1YID005', 'Eva Adams', '+12098765432', 'eva.adams@xyz.com', 'Ev@12345', 1, 'admin');

-- Insert into CarStatusLog
INSERT INTO CarStatusLog (UserID, CarID, StatusID) VALUES
(1, 'CAR001', 'STATUS001'),
(2, 'CAR002', 'STATUS002'),
(3, 'CAR003', 'STATUS003'),
(4, 'CAR004', 'STATUS001'),
(5, 'CAR005', 'STATUS002');



SELECT * FROM Users; 
SELECT * FROM Cars; 
SELECT * FROM CarStatusLog; 
Select * from CarStatus; 